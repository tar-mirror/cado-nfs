
# The files in this directory are automatically generated by mpfq using
# the following commands. The variable MPFQ must point to the src/
# subdirectory of the mpfq source tree. Note that this works only with
# the development version of mpfq, not the released one.

MPFQ:=$$HOME/Mp/mpfq/src

mpfq_tag_list:=u64k1 u64k2 u64k3 u64k4 p_1 p_2 p_3 p_4 p_5 p_6 p_7 p_8 p_9 p_10 p_11 p_12 p_13 p_14 p_15 pz

all: basic prime-fields prepend-includes

MPFQ_TEMP:=/tmp/mpfq-cado

basic:
	# # The GF(p) layers are now also generated from abase.pl
	# # $(MPFQ)/gfp/gen_gfp.pl output_path=. type=plain w=64 n=4
	$(MPFQ)/simd/abase.pl w=64 $(mpfq_tag_list)
	/bin/cp -f $(MPFQ)/simd/binary-dotprods-backends.h .
	/bin/cp -f $(MPFQ)/include/mpfq.h .
	/bin/cp -f $(MPFQ)/gfp/mpfq_gfp_common.h .
	/bin/cp -f $(MPFQ)/test/mpfq_test.c.meta ../../../tests/linalg/bwc/mpfq/
	$(MPFQ)/test/mk_name_k.pl  name=ab --noshift > mpfq_name_ab.h
	$(MPFQ)/test/mk_name_k.pl  name=K > ../../../tests/linalg/bwc/mpfq/mpfq_name_K.h

# for tag in $(filter p%,$(mpfq_tag_list)) ; do (echo '#include "cado.h"' ; sed -e "s/TAG/$$tag/g" -e "/^#line/ d" -e "/^#warning/ d" < $(MPFQ)/test/mpfq_test.c.meta) > ../../../tests/linalg/bwc/mpfq/mpfq_test_$$tag.c ; done

.PHONY: mpfq-buildtree

mpfq-buildtree:
	if [ -e $(MPFQ_TEMP) ] ; then echo "Purging old $(MPFQ_TEMP)" ; rm -rf $(MPFQ_TEMP) ; fi
	echo "Creating new $(MPFQ_TEMP)"
	mkdir $(MPFQ_TEMP)
	(cd $(MPFQ_TEMP) ; cmake $(MPFQ))

prime-fields: mpfq-buildtree
	# This would almost suffice, except for the mpfq_fixmp.h file.
	# $(MPFQ)/fixmp/gen_fixmp.pl output_path=.
	$(MPFQ)/fixmp/gen_test_fixmp.pl > ../../../tests/linalg/bwc/mpfq/mpfq_test_fixmp.c
	$(MAKE) -C $(MPFQ_TEMP) fixmp_files
	/bin/cp -f $(MPFQ_TEMP)/include/mpfq_fixmp*h .
	patch -p1 -d. < asm-constraints.patch
	-rm -f *.orig

prepend-includes:
	ls mpfq_*.c | xargs -n 1 sed -e '1 i#include "cado.h"' -i
	ls ../../../tests/linalg/bwc/mpfq/mpfq_*.c | xargs -n 1 sed -e '1 i#include "cado.h"' -i


clean-mpfq_%:
	-rm -f mpfq_$*.c
	-rm -f mpfq_$*.h
	-rm -f mpfq_$*_t.c
	-rm -f mpfq_$*_t.h


clean:	$(patsubst %,clean-mpfq_%,$(mpfq_tag_list))
	-rm -f mpfq_vbase.c
	-rm -f mpfq_vbase.h
	-rm -f binary-dotprods-backends.h
	-rm -f mpfq.h
	-rm -f mpfq_gfp_common.h
	-rm -f mpfq_fixmp*.h
	-rm -f mpfq_name_ab.h
	-rm -f tags
	-rm -f *~
