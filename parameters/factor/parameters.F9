# An example parameter file for an SNFS factorization, in this case, F9 = 2^512+1

name = F9
N = 5529373746539492451469451709955220061537996975706118061624681552800446063738635599565773930892108210210778168305399196915314944498011438291393118209

lim0 = 2300000
lim1 = 1200000
lpb0 = 26
lpb1 = 26

# We supply the SNFS polynomial, so we don't want any polynomial selection
# to happen. To this effect we set admin and admax both to 0. Note that
# if the factorization is interrupted and restarted, they must still both
# be set to 0, or the restarted run will happily run polynomial selection
# from where it left off (i.e., at 0) up to the new admax.
tasks.polyselect.admin = 0
tasks.polyselect.admax = 0
tasks.polyselect.adrange = 0
# This instructs the polyselect task to import the polynomial in the file
# F9.poly. Imported polynomials are treated like any other polynomial found
# during polyselect: they are added to the list of candidate polynomials
# from which the one with the best Murphy E value will be chosen. If no
# Murphy E value is specified in the imported file, it is assumed to be 0,
# simply because cadofactor currently can't compute E for a given polynomial.
# Thus if there is no Murphy E value in the imported file and the polynomial
# search range [admin, admax] is not empty, then polynomial selection will
# probably find some polynomial with Murphy E > 0 and use that one instead
# of the imported polynomial.
tasks.polyselect.import = parameters/polynomials/F9.poly

# Sieving parameters which seem ok for this number.
# For SNFS numbers, choosing sieving parameters is a bit trickier than for
# GNFS, because they depend on more than just the input number size. For
# example, using an algebraic factor in the number may force using a somewhat
# larger or smaller degree (say, 6 or 4) than one would like. The
# algebraic polynomial might have only very small coefficients, or might
# contain a large coefficient or two... and without knowing how large the
# norms on the two sides are, one cannot suggest good sieving parameters.
# These parameters happen to work alright for F9, though.
tasks.sieve.mfb0 = 52
tasks.sieve.mfb1 = 52
tasks.sieve.lambda0 = 2.1
tasks.sieve.lambda1 = 2.2
tasks.I = 12
tasks.sieve.qmin = 2000000
tasks.sieve.qrange = 5000
tasks.sieve.sqside = 0

# linear algebra
tasks.linalg.m = 64
tasks.linalg.n = 64
tasks.linalg.characters.nchar = 50
